/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutServicesImport } from './routes/_layout/services'
import { Route as LayoutDepartmentsImport } from './routes/_layout/departments'
import { Route as LayoutContactImport } from './routes/_layout/contact'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutApplyIndexImport } from './routes/_layout/apply/index'
import { Route as LayoutAdminIndexImport } from './routes/_layout/admin/index'
import { Route as LayoutAdminDashboardImport } from './routes/_layout.admin.dashboard'
import { Route as LayoutAdminDashboardIndexImport } from './routes/_layout/admin/dashboard/index'
import { Route as LayoutApplyApplyStartImport } from './routes/_layout/apply/apply.start'
import { Route as LayoutAdminDashboardApplicationsImport } from './routes/_layout/admin/dashboard/applications'
import { Route as LayoutAdminDashboardAnouncementsImport } from './routes/_layout/admin/dashboard/anouncements'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutServicesRoute = LayoutServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDepartmentsRoute = LayoutDepartmentsImport.update({
  id: '/departments',
  path: '/departments',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutContactRoute = LayoutContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutApplyIndexRoute = LayoutApplyIndexImport.update({
  id: '/apply/',
  path: '/apply/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminIndexRoute = LayoutAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminDashboardRoute = LayoutAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminDashboardIndexRoute = LayoutAdminDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutAdminDashboardRoute,
} as any)

const LayoutApplyApplyStartRoute = LayoutApplyApplyStartImport.update({
  id: '/apply/apply/start',
  path: '/apply/apply/start',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminDashboardApplicationsRoute =
  LayoutAdminDashboardApplicationsImport.update({
    id: '/applications',
    path: '/applications',
    getParentRoute: () => LayoutAdminDashboardRoute,
  } as any)

const LayoutAdminDashboardAnouncementsRoute =
  LayoutAdminDashboardAnouncementsImport.update({
    id: '/anouncements',
    path: '/anouncements',
    getParentRoute: () => LayoutAdminDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/contact': {
      id: '/_layout/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutContactImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/departments': {
      id: '/_layout/departments'
      path: '/departments'
      fullPath: '/departments'
      preLoaderRoute: typeof LayoutDepartmentsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/services': {
      id: '/_layout/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutServicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/dashboard': {
      id: '/_layout/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof LayoutAdminDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/': {
      id: '/_layout/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/apply/': {
      id: '/_layout/apply/'
      path: '/apply'
      fullPath: '/apply'
      preLoaderRoute: typeof LayoutApplyIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/dashboard/anouncements': {
      id: '/_layout/admin/dashboard/anouncements'
      path: '/anouncements'
      fullPath: '/admin/dashboard/anouncements'
      preLoaderRoute: typeof LayoutAdminDashboardAnouncementsImport
      parentRoute: typeof LayoutAdminDashboardImport
    }
    '/_layout/admin/dashboard/applications': {
      id: '/_layout/admin/dashboard/applications'
      path: '/applications'
      fullPath: '/admin/dashboard/applications'
      preLoaderRoute: typeof LayoutAdminDashboardApplicationsImport
      parentRoute: typeof LayoutAdminDashboardImport
    }
    '/_layout/apply/apply/start': {
      id: '/_layout/apply/apply/start'
      path: '/apply/apply/start'
      fullPath: '/apply/apply/start'
      preLoaderRoute: typeof LayoutApplyApplyStartImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/dashboard/': {
      id: '/_layout/admin/dashboard/'
      path: '/'
      fullPath: '/admin/dashboard/'
      preLoaderRoute: typeof LayoutAdminDashboardIndexImport
      parentRoute: typeof LayoutAdminDashboardImport
    }
  }
}

// Create and export the route tree

interface LayoutAdminDashboardRouteChildren {
  LayoutAdminDashboardAnouncementsRoute: typeof LayoutAdminDashboardAnouncementsRoute
  LayoutAdminDashboardApplicationsRoute: typeof LayoutAdminDashboardApplicationsRoute
  LayoutAdminDashboardIndexRoute: typeof LayoutAdminDashboardIndexRoute
}

const LayoutAdminDashboardRouteChildren: LayoutAdminDashboardRouteChildren = {
  LayoutAdminDashboardAnouncementsRoute: LayoutAdminDashboardAnouncementsRoute,
  LayoutAdminDashboardApplicationsRoute: LayoutAdminDashboardApplicationsRoute,
  LayoutAdminDashboardIndexRoute: LayoutAdminDashboardIndexRoute,
}

const LayoutAdminDashboardRouteWithChildren =
  LayoutAdminDashboardRoute._addFileChildren(LayoutAdminDashboardRouteChildren)

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutContactRoute: typeof LayoutContactRoute
  LayoutDepartmentsRoute: typeof LayoutDepartmentsRoute
  LayoutServicesRoute: typeof LayoutServicesRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAdminDashboardRoute: typeof LayoutAdminDashboardRouteWithChildren
  LayoutAdminIndexRoute: typeof LayoutAdminIndexRoute
  LayoutApplyIndexRoute: typeof LayoutApplyIndexRoute
  LayoutApplyApplyStartRoute: typeof LayoutApplyApplyStartRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutContactRoute: LayoutContactRoute,
  LayoutDepartmentsRoute: LayoutDepartmentsRoute,
  LayoutServicesRoute: LayoutServicesRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAdminDashboardRoute: LayoutAdminDashboardRouteWithChildren,
  LayoutAdminIndexRoute: LayoutAdminIndexRoute,
  LayoutApplyIndexRoute: LayoutApplyIndexRoute,
  LayoutApplyApplyStartRoute: LayoutApplyApplyStartRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/departments': typeof LayoutDepartmentsRoute
  '/services': typeof LayoutServicesRoute
  '/': typeof LayoutIndexRoute
  '/admin/dashboard': typeof LayoutAdminDashboardRouteWithChildren
  '/admin': typeof LayoutAdminIndexRoute
  '/apply': typeof LayoutApplyIndexRoute
  '/admin/dashboard/anouncements': typeof LayoutAdminDashboardAnouncementsRoute
  '/admin/dashboard/applications': typeof LayoutAdminDashboardApplicationsRoute
  '/apply/apply/start': typeof LayoutApplyApplyStartRoute
  '/admin/dashboard/': typeof LayoutAdminDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/departments': typeof LayoutDepartmentsRoute
  '/services': typeof LayoutServicesRoute
  '/': typeof LayoutIndexRoute
  '/admin': typeof LayoutAdminIndexRoute
  '/apply': typeof LayoutApplyIndexRoute
  '/admin/dashboard/anouncements': typeof LayoutAdminDashboardAnouncementsRoute
  '/admin/dashboard/applications': typeof LayoutAdminDashboardApplicationsRoute
  '/apply/apply/start': typeof LayoutApplyApplyStartRoute
  '/admin/dashboard': typeof LayoutAdminDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/contact': typeof LayoutContactRoute
  '/_layout/departments': typeof LayoutDepartmentsRoute
  '/_layout/services': typeof LayoutServicesRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/admin/dashboard': typeof LayoutAdminDashboardRouteWithChildren
  '/_layout/admin/': typeof LayoutAdminIndexRoute
  '/_layout/apply/': typeof LayoutApplyIndexRoute
  '/_layout/admin/dashboard/anouncements': typeof LayoutAdminDashboardAnouncementsRoute
  '/_layout/admin/dashboard/applications': typeof LayoutAdminDashboardApplicationsRoute
  '/_layout/apply/apply/start': typeof LayoutApplyApplyStartRoute
  '/_layout/admin/dashboard/': typeof LayoutAdminDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/contact'
    | '/departments'
    | '/services'
    | '/'
    | '/admin/dashboard'
    | '/admin'
    | '/apply'
    | '/admin/dashboard/anouncements'
    | '/admin/dashboard/applications'
    | '/apply/apply/start'
    | '/admin/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/contact'
    | '/departments'
    | '/services'
    | '/'
    | '/admin'
    | '/apply'
    | '/admin/dashboard/anouncements'
    | '/admin/dashboard/applications'
    | '/apply/apply/start'
    | '/admin/dashboard'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/_layout/contact'
    | '/_layout/departments'
    | '/_layout/services'
    | '/_layout/'
    | '/_layout/admin/dashboard'
    | '/_layout/admin/'
    | '/_layout/apply/'
    | '/_layout/admin/dashboard/anouncements'
    | '/_layout/admin/dashboard/applications'
    | '/_layout/apply/apply/start'
    | '/_layout/admin/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/contact",
        "/_layout/departments",
        "/_layout/services",
        "/_layout/",
        "/_layout/admin/dashboard",
        "/_layout/admin/",
        "/_layout/apply/",
        "/_layout/apply/apply/start"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/contact": {
      "filePath": "_layout/contact.tsx",
      "parent": "/_layout"
    },
    "/_layout/departments": {
      "filePath": "_layout/departments.tsx",
      "parent": "/_layout"
    },
    "/_layout/services": {
      "filePath": "_layout/services.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/admin/dashboard": {
      "filePath": "_layout.admin.dashboard.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/admin/dashboard/anouncements",
        "/_layout/admin/dashboard/applications",
        "/_layout/admin/dashboard/"
      ]
    },
    "/_layout/admin/": {
      "filePath": "_layout/admin/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/apply/": {
      "filePath": "_layout/apply/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/admin/dashboard/anouncements": {
      "filePath": "_layout/admin/dashboard/anouncements.tsx",
      "parent": "/_layout/admin/dashboard"
    },
    "/_layout/admin/dashboard/applications": {
      "filePath": "_layout/admin/dashboard/applications.tsx",
      "parent": "/_layout/admin/dashboard"
    },
    "/_layout/apply/apply/start": {
      "filePath": "_layout/apply/apply.start.tsx",
      "parent": "/_layout"
    },
    "/_layout/admin/dashboard/": {
      "filePath": "_layout/admin/dashboard/index.tsx",
      "parent": "/_layout/admin/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
